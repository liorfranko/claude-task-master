# Task ID: 95
# Title: Extend Task Schema for Monday.com Integration
# Status: pending
# Dependencies: 93
# Priority: medium
# Description: Extend the Task Master task schema to include Monday.com item tracking fields such as mondayItemId, lastSyncedAt, and syncStatus.
# Details:
1. Extend the task schema to include Monday.com integration fields
2. Update task creation and modification functions to handle new fields
3. Add utility functions to update sync status

Schema extension:
```javascript
// Extend existing task schema
const taskSchema = {
  // Existing fields...
  
  // Monday.com integration fields
  mondayItemId: { type: 'string', required: false },
  lastSyncedAt: { type: 'string', required: false }, // ISO date string
  syncStatus: { type: 'string', enum: ['synced', 'pending', 'error'], default: 'pending' }
};

// Utility functions for Monday sync status
function markTaskForSync(taskId) {
  const tasks = loadTasks();
  const task = tasks.find(t => t.id === taskId);
  
  if (task) {
    task.syncStatus = 'pending';
    saveTasks(tasks);
    return true;
  }
  
  return false;
}

function updateTaskSyncStatus(taskId, mondayItemId, status = 'synced', error = null) {
  const tasks = loadTasks();
  const task = tasks.find(t => t.id === taskId);
  
  if (task) {
    task.mondayItemId = mondayItemId;
    task.lastSyncedAt = new Date().toISOString();
    task.syncStatus = status;
    task.syncError = error;
    saveTasks(tasks);
    return true;
  }
  
  return false;
}

// Hook into existing task modification functions
const originalUpdateTask = updateTask;
updateTask = function(taskId, updates) {
  const result = originalUpdateTask(taskId, updates);
  if (result && !updates.mondayItemId && !updates.syncStatus) {
    // Task was updated but not as part of a sync operation
    markTaskForSync(taskId);
  }
  return result;
};
```

# Test Strategy:
1. Create unit tests for the extended schema:
   - Test validation of new fields
   - Test default values
   - Test enum validation for syncStatus
2. Create unit tests for utility functions:
   - Test markTaskForSync
   - Test updateTaskSyncStatus
   - Test hook into updateTask
3. Integration tests:
   - Create task and verify sync fields are initialized correctly
   - Update task and verify it's marked for sync
   - Update sync status and verify fields are updated correctly
