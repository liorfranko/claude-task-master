# Task ID: 119
# Title: Install and setup GraphQL client for Monday.com API
# Status: pending
# Dependencies: None
# Priority: high
# Description: Install the graphql-request dependency and create the foundation for the Monday API client that will handle all interactions with the Monday.com GraphQL API.
# Details:
1. Install the graphql-request dependency using npm: `npm install graphql-request@5.2.0`
2. Create the Monday API client module at `scripts/modules/monday-client.js`
3. Implement basic client setup with authentication using Personal Access Token
4. Add environment variable support for `MONDAY_API_TOKEN`
5. Implement rate limiting (10 requests per second as per Monday.com API limits)
6. Create basic error handling with offline fallback
7. Implement a testConnection() method to verify connectivity
8. Add GraphQL query templates for common operations (getBoard, getItems, createItem, updateItem, deleteItem)
9. Implement specific methods to work with board ID 9275265350

Code structure:
```javascript
const { GraphQLClient, gql } = require('graphql-request');

class MondayClient {
  constructor(apiToken) {
    this.apiToken = apiToken || process.env.MONDAY_API_TOKEN;
    this.endpoint = 'https://api.monday.com/v2';
    this.client = new GraphQLClient(this.endpoint, {
      headers: {
        'Authorization': this.apiToken,
        'Content-Type': 'application/json'
      }
    });
    this.rateLimiter = this._setupRateLimiter();
  }

  _setupRateLimiter() {
    // Implement token bucket algorithm for 10 req/sec
  }

  async testConnection() {
    // Test API connectivity
  }

  async getBoard(boardId) {
    // Get board structure
  }

  async getItems(boardId) {
    // Get all items from a board
  }

  async createItem(boardId, itemName, columnValues) {
    // Create a new item
  }

  async updateItem(boardId, itemId, columnValues) {
    // Update an existing item
  }

  async deleteItem(boardId, itemId) {
    // Delete an item
  }
}

module.exports = new MondayClient();
```

# Test Strategy:
1. Unit test the MondayClient class with mocked GraphQL responses
2. Test rate limiting functionality with rapid request sequences
3. Test error handling with simulated network failures
4. Integration test with actual Monday.com API using test board 9275265350
5. Verify testConnection() method works with valid and invalid tokens
6. Test all CRUD operations against a test item on the board
7. Validate proper handling of API rate limits
8. Run the test command: `node -e "require('./scripts/modules/monday-client.js').testConnection()"`
