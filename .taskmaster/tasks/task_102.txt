# Task ID: 102
# Title: Create Documentation and Usage Examples
# Status: pending
# Dependencies: 98, 99, 101
# Priority: low
# Description: Create comprehensive documentation for the Monday.com integration, including setup instructions, usage examples, and troubleshooting guides.
# Details:
1. Create README.md for Monday.com integration
2. Document CLI commands and options
3. Create usage examples and troubleshooting guide

Documentation content:
```markdown
# Monday.com Integration for Task Master

This feature enables syncing Task Master tasks to Monday.com project boards. The integration provides a one-way sync from Task Master to Monday.com, allowing teams to visualize and manage their tasks in Monday.com while maintaining Task Master as the source of truth.

## Setup

### Prerequisites

- Task Master installed and configured
- A Monday.com account with API access
- A Monday.com board to sync tasks to (default test board ID: 9275265350)

### Installation

The Monday.com integration is included in Task Master. To set it up:

1. Install the required dependency:

```bash
npm install graphql-request
```

2. Configure the integration:

```bash
# Using CLI
task-master config monday --board-id=YOUR_BOARD_ID --token=YOUR_API_TOKEN

# Or using environment variable for token (recommended)
export MONDAY_API_TOKEN=your_api_token
task-master config monday --board-id=YOUR_BOARD_ID
```

## Usage

### Syncing Tasks

```bash
# Sync all pending tasks
task-master sync-monday

# Sync a specific task
task-master sync-monday --task-id=123

# Force sync all tasks (regardless of sync status)
task-master sync-monday --force

# Dry run (show what would be synced without making changes)
task-master sync-monday --dry-run
```

### Checking Sync Status

```bash
# Show sync status
task-master monday-status
```

### Using MCP Tools

The Monday.com integration is also available through Cursor's MCP interface:

1. Open Cursor
2. Access MCP tools
3. Use the following tools:
   - `sync-monday`: Sync tasks to Monday.com
   - `monday-status`: Show sync status
   - `configure-monday`: Configure Monday.com integration

## Configuration Options

The Monday.com integration can be configured in `.taskmasterconfig`:

```json
{
  "mondayIntegration": {
    "boardId": "9275265350",
    "apiToken": "your_api_token", // Better to use environment variable
    "columnMapping": {
      "status": "status",
      "title": "name",
      "description": "notes"
    },
    "syncSettings": {
      "autoSync": false,
      "syncSubtasks": false
    }
  }
}
```

## Status Mapping

Task Master statuses are mapped to Monday.com statuses as follows:

- `pending` → "Not Started"
- `in_progress` → "Working on it"
- `done` → "Done"

## Troubleshooting

### Common Issues

1. **Authentication Failed**
   - Check your API token
   - Ensure the token has the necessary permissions
   - Try using the environment variable instead of config file

2. **Board Not Found**
   - Verify the board ID is correct
   - Ensure your account has access to the board

3. **Rate Limiting**
   - The integration respects Monday.com's rate limit of 10 requests per second
   - For large syncs, some operations may be delayed

4. **Sync Errors**
   - Check `monday-sync.log` for detailed error information
   - Run with `--dry-run` to check for potential issues

### Logs

Sync operations are logged to `monday-sync.log` in the project directory. To enable debug logging:

```bash
export MONDAY_LOG_LEVEL=debug
```

## Future Enhancements

- Bidirectional sync (Monday.com to Task Master)
- Advanced field mapping
- Subtask synchronization
- Automatic sync on task changes

## Support

For issues or feature requests, please file an issue in the Task Master repository.
```

# Test Strategy:
1. Review documentation for accuracy:
   - Verify all CLI commands work as documented
   - Test all usage examples
   - Verify troubleshooting steps resolve the described issues
2. User testing:
   - Have team members follow the documentation to set up the integration
   - Collect feedback on clarity and completeness
   - Identify any missing information or confusing sections
3. Documentation validation:
   - Check for technical accuracy
   - Verify links and references
   - Ensure all configuration options are documented
